<?xml version="1.0"?>
<robot name="pibot" xmlns:xacro="http://ros.org/wiki/xacro">
<!-- Define robot constants -->
  <xacro:property name="base_width" value="0.2794"/>
  <xacro:property name="base_length" value="0.4318"/>
  <xacro:property name="base_height" value="0.17145"/>
  <xacro:property name="wheel_radius" value="0.06604"/>
  <xacro:property name="wheel_width" value="0.066675"/>
  <xacro:property name="wheel_ygap" value="0.03"/>
  <xacro:property name="wheel_zoff" value="0.07915"/>
  <xacro:property name="wheel_xoff" value="-0.08255"/>
  <xacro:property name="caster_xoff" value="-0.1555"/>

   <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0.0 1.0 1.0 1.0"/>
      </material>
    </visual>
  </link>

  <!-- Robot Footprint -->
  <!-- z origin ${-(wheel_radius+wheel_zoff+base_height)} -->
  <link name="base_footprint">
  </link>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 -${(base_height/2-wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 ${-(base_height/2)}" rpy="0 0 0"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <link name="chassis">
  <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="6" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <joint name="chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>


    <!-- Wheels -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <inertial>
      <mass value="0.5"/>
      <inertia ixx="${(1/12) * 0.1 * (3 * wheel_radius + wheel_width*wheel_width)}" 
               ixy="0.0" 
               ixz="0.0" 
               iyy="${(1/12) * 0.1 * (3 * wheel_radius + wheel_width*wheel_width)}" 
               iyz="0.0" 
               izz="${(1/12) * 0.1 * (3 * wheel_radius + wheel_width*wheel_width)}"/>
      </inertial>
    </link>
<!-- change type to fixed for rviz -->
    <joint name="${prefix}_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${-wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />

    <!-- Caster Wheel -->
  <link name="rear_caster">
    <visual>
      <geometry>
        <sphere radius="0.0254"/>
      </geometry>
      <material name="White">
        <color rgba="1.0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.020"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.0"/>
      <inertia
        ixx="${(2/5 * 0.01 * (0.02 * 0.02))}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(2/5 * 0.01 * (0.02 * 0.02))}"
        iyz="0.0"
        izz="${(2/5 * 0.01 * (0.02 * 0.02))}"
      />
    </inertial>
  </link>

  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rear_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-(base_height/2 + 0.025)}" rpy="0 0 0"/>
  </joint>

  <!-- Lidar Link -->
  <link name="lidar_link">
  <visual>
    <geometry>
    <cylinder radius="0.035" length="0.055" />
    </geometry>
    <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
  </visual>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.1365 0 0.11" rpy="0 0 0"/>
  </joint>

  <!-- Lidar Link -->
  <link name="laser">
  </link>

  <joint name="laser_joint" type="fixed">
    <parent link="lidar_link"/>
    <child link="laser"/>
    <origin xyz="0 0 0" rpy="0 0 3.14159"/>
  </joint>

  <link name="imu_link">
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="-0.05 0 0"/>
  </joint>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0.1 0 0" rpy="0 0 0"/>
  </joint>
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
  </link>

  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  </joint>
  <link name="camera_link_optical">
  </link>


</robot>
